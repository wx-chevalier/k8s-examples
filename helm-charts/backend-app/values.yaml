nameOverride: ""
fullnameOverride: ""
replicaCount: 1

image:
  name: registry.yourdomain.com/yourbiz/yourbiz-api:latest
  pullPolicy: Always
imagePullSecrets: []

biz:
  # cmd: ["npm start"]
  env:
    ENV_VAR: value
  # envSecrets:
  #   SECRET_VAR: k8s-secret-name
  localFileStore:
    enabled: true
    savePath: /yourbiz/files
    maxFileSize: 1024MB
    endpoint: https://api.yourdomain.com/file
  configMap:
    enabled: true
    name: config.xml
    mountPath: /etc/yourbiz
    content: |-
      key: value

persistence:
  enabled: false
  # existingClaim:
  # annotations:
  # accessMode:
  # size:
  # storageClass:

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
